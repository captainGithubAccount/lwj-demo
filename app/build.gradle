plugins {
    id 'com.android.application'

}
apply from:'../basic.gradle'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-parcelize'

apply plugin: 'kotlin-kapt'
//kotlin语言使用注入框架，databading都要用这个
apply plugin: "androidx.navigation.safeargs.kotlin"
//用于navigation传参的时候的一种保护,注意这个插件要配置依赖才可以使用

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.lwj.lwj_demo"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        //给Java组件暴露，标记，正式环境 和 测试环境的标记
        //组件化 和 集成化的时候需要
        //会加载到java BuildConfig类中作为静态常量isModule
        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))
        //@param boolean: 定义暴露的属性的类型
        //@param isMoudle: 表示暴露给Java的属性的变量名


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled true
    }
}

dependencies {
    deps.each{k,v -> implementation v}

    //当产品要release的时候
    if(isRelease){
        //所有子模块要依附app壳，只能打包出一个app壳包
        implementation project(':splash')

        attachs.each{k,v -> implementation project('v')}
        //这里可以使用一个foreach搞定所有
        //上网搜foreach子模块依附app壳
    }
}